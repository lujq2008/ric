// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msgx.proto

package msgx // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// e2ap pdu
type GrpcMsg struct {
	Mtype                int32    `protobuf:"varint,1,opt,name=Mtype,proto3" json:"Mtype,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=Payload,proto3" json:"Payload,omitempty"`
	PayloadLen           int32    `protobuf:"varint,3,opt,name=PayloadLen,proto3" json:"PayloadLen,omitempty"`
	Callid               int32    `protobuf:"varint,4,opt,name=Callid,proto3" json:"Callid,omitempty"`
	Timeout              int32    `protobuf:"varint,5,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Status               int32    `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Meid                 string   `protobuf:"bytes,7,opt,name=Meid,proto3" json:"Meid,omitempty"`
	Topic                string   `protobuf:"bytes,8,opt,name=topic,proto3" json:"topic,omitempty"`
	SubId                int32    `protobuf:"varint,9,opt,name=SubId,proto3" json:"SubId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcMsg) Reset()         { *m = GrpcMsg{} }
func (m *GrpcMsg) String() string { return proto.CompactTextString(m) }
func (*GrpcMsg) ProtoMessage()    {}
func (*GrpcMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{0}
}
func (m *GrpcMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcMsg.Unmarshal(m, b)
}
func (m *GrpcMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcMsg.Marshal(b, m, deterministic)
}
func (dst *GrpcMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcMsg.Merge(dst, src)
}
func (m *GrpcMsg) XXX_Size() int {
	return xxx_messageInfo_GrpcMsg.Size(m)
}
func (m *GrpcMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcMsg.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcMsg proto.InternalMessageInfo

func (m *GrpcMsg) GetMtype() int32 {
	if m != nil {
		return m.Mtype
	}
	return 0
}

func (m *GrpcMsg) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *GrpcMsg) GetPayloadLen() int32 {
	if m != nil {
		return m.PayloadLen
	}
	return 0
}

func (m *GrpcMsg) GetCallid() int32 {
	if m != nil {
		return m.Callid
	}
	return 0
}

func (m *GrpcMsg) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *GrpcMsg) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GrpcMsg) GetMeid() string {
	if m != nil {
		return m.Meid
	}
	return ""
}

func (m *GrpcMsg) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *GrpcMsg) GetSubId() int32 {
	if m != nil {
		return m.SubId
	}
	return 0
}

type GrpcReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcReply) Reset()         { *m = GrpcReply{} }
func (m *GrpcReply) String() string { return proto.CompactTextString(m) }
func (*GrpcReply) ProtoMessage()    {}
func (*GrpcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{1}
}
func (m *GrpcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcReply.Unmarshal(m, b)
}
func (m *GrpcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcReply.Marshal(b, m, deterministic)
}
func (dst *GrpcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcReply.Merge(dst, src)
}
func (m *GrpcReply) XXX_Size() int {
	return xxx_messageInfo_GrpcReply.Size(m)
}
func (m *GrpcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcReply.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcReply proto.InternalMessageInfo

func (m *GrpcReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GrpcReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// 2021-3-30
type XAPPRequestID struct {
	XappID               uint32   `protobuf:"varint,1,opt,name=XappID,proto3" json:"XappID,omitempty"`
	XappInstanceID       uint32   `protobuf:"varint,2,opt,name=XappInstanceID,proto3" json:"XappInstanceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XAPPRequestID) Reset()         { *m = XAPPRequestID{} }
func (m *XAPPRequestID) String() string { return proto.CompactTextString(m) }
func (*XAPPRequestID) ProtoMessage()    {}
func (*XAPPRequestID) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{2}
}
func (m *XAPPRequestID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XAPPRequestID.Unmarshal(m, b)
}
func (m *XAPPRequestID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XAPPRequestID.Marshal(b, m, deterministic)
}
func (dst *XAPPRequestID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XAPPRequestID.Merge(dst, src)
}
func (m *XAPPRequestID) XXX_Size() int {
	return xxx_messageInfo_XAPPRequestID.Size(m)
}
func (m *XAPPRequestID) XXX_DiscardUnknown() {
	xxx_messageInfo_XAPPRequestID.DiscardUnknown(m)
}

var xxx_messageInfo_XAPPRequestID proto.InternalMessageInfo

func (m *XAPPRequestID) GetXappID() uint32 {
	if m != nil {
		return m.XappID
	}
	return 0
}

func (m *XAPPRequestID) GetXappInstanceID() uint32 {
	if m != nil {
		return m.XappInstanceID
	}
	return 0
}

type RICMsgHeader struct {
	MsgType              int32          `protobuf:"varint,1,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	MsgVer               int32          `protobuf:"varint,2,opt,name=MsgVer,proto3" json:"MsgVer,omitempty"`
	XappRequestID        *XAPPRequestID `protobuf:"bytes,3,opt,name=XappRequestID,proto3" json:"XappRequestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RICMsgHeader) Reset()         { *m = RICMsgHeader{} }
func (m *RICMsgHeader) String() string { return proto.CompactTextString(m) }
func (*RICMsgHeader) ProtoMessage()    {}
func (*RICMsgHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{3}
}
func (m *RICMsgHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICMsgHeader.Unmarshal(m, b)
}
func (m *RICMsgHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICMsgHeader.Marshal(b, m, deterministic)
}
func (dst *RICMsgHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICMsgHeader.Merge(dst, src)
}
func (m *RICMsgHeader) XXX_Size() int {
	return xxx_messageInfo_RICMsgHeader.Size(m)
}
func (m *RICMsgHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RICMsgHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RICMsgHeader proto.InternalMessageInfo

func (m *RICMsgHeader) GetMsgType() int32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *RICMsgHeader) GetMsgVer() int32 {
	if m != nil {
		return m.MsgVer
	}
	return 0
}

func (m *RICMsgHeader) GetXappRequestID() *XAPPRequestID {
	if m != nil {
		return m.XappRequestID
	}
	return nil
}

type XappMsgHeader struct {
	MsgType              int32          `protobuf:"varint,1,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	MsgVer               float32        `protobuf:"fixed32,2,opt,name=MsgVer,proto3" json:"MsgVer,omitempty"`
	Token                string         `protobuf:"bytes,3,opt,name=Token,proto3" json:"Token,omitempty"`
	XappRequestID        *XAPPRequestID `protobuf:"bytes,4,opt,name=XappRequestID,proto3" json:"XappRequestID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *XappMsgHeader) Reset()         { *m = XappMsgHeader{} }
func (m *XappMsgHeader) String() string { return proto.CompactTextString(m) }
func (*XappMsgHeader) ProtoMessage()    {}
func (*XappMsgHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{4}
}
func (m *XappMsgHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XappMsgHeader.Unmarshal(m, b)
}
func (m *XappMsgHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XappMsgHeader.Marshal(b, m, deterministic)
}
func (dst *XappMsgHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XappMsgHeader.Merge(dst, src)
}
func (m *XappMsgHeader) XXX_Size() int {
	return xxx_messageInfo_XappMsgHeader.Size(m)
}
func (m *XappMsgHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_XappMsgHeader.DiscardUnknown(m)
}

var xxx_messageInfo_XappMsgHeader proto.InternalMessageInfo

func (m *XappMsgHeader) GetMsgType() int32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *XappMsgHeader) GetMsgVer() float32 {
	if m != nil {
		return m.MsgVer
	}
	return 0
}

func (m *XappMsgHeader) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *XappMsgHeader) GetXappRequestID() *XAPPRequestID {
	if m != nil {
		return m.XappRequestID
	}
	return nil
}

type XappRegMsg struct {
	Header               *XappMsgHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	XappVer              float32        `protobuf:"fixed32,2,opt,name=XappVer,proto3" json:"XappVer,omitempty"`
	XappName             string         `protobuf:"bytes,3,opt,name=XappName,proto3" json:"XappName,omitempty"`
	XappFunctions        string         `protobuf:"bytes,4,opt,name=XappFunctions,proto3" json:"XappFunctions,omitempty"`
	XappIpaddr           string         `protobuf:"bytes,5,opt,name=XappIpaddr,proto3" json:"XappIpaddr,omitempty"`
	XappPort             string         `protobuf:"bytes,6,opt,name=XappPort,proto3" json:"XappPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *XappRegMsg) Reset()         { *m = XappRegMsg{} }
func (m *XappRegMsg) String() string { return proto.CompactTextString(m) }
func (*XappRegMsg) ProtoMessage()    {}
func (*XappRegMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{5}
}
func (m *XappRegMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XappRegMsg.Unmarshal(m, b)
}
func (m *XappRegMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XappRegMsg.Marshal(b, m, deterministic)
}
func (dst *XappRegMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XappRegMsg.Merge(dst, src)
}
func (m *XappRegMsg) XXX_Size() int {
	return xxx_messageInfo_XappRegMsg.Size(m)
}
func (m *XappRegMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_XappRegMsg.DiscardUnknown(m)
}

var xxx_messageInfo_XappRegMsg proto.InternalMessageInfo

func (m *XappRegMsg) GetHeader() *XappMsgHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *XappRegMsg) GetXappVer() float32 {
	if m != nil {
		return m.XappVer
	}
	return 0
}

func (m *XappRegMsg) GetXappName() string {
	if m != nil {
		return m.XappName
	}
	return ""
}

func (m *XappRegMsg) GetXappFunctions() string {
	if m != nil {
		return m.XappFunctions
	}
	return ""
}

func (m *XappRegMsg) GetXappIpaddr() string {
	if m != nil {
		return m.XappIpaddr
	}
	return ""
}

func (m *XappRegMsg) GetXappPort() string {
	if m != nil {
		return m.XappPort
	}
	return ""
}

type XappRegResp struct {
	Header               *RICMsgHeader          `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	RicServices          map[string]*RICService `protobuf:"bytes,2,rep,name=RicServices,proto3" json:"RicServices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Topic                string                 `protobuf:"bytes,3,opt,name=Topic,proto3" json:"Topic,omitempty"`
	KafkaURL             string                 `protobuf:"bytes,4,opt,name=KafkaURL,proto3" json:"KafkaURL,omitempty"`
	Cause                string                 `protobuf:"bytes,5,opt,name=Cause,proto3" json:"Cause,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *XappRegResp) Reset()         { *m = XappRegResp{} }
func (m *XappRegResp) String() string { return proto.CompactTextString(m) }
func (*XappRegResp) ProtoMessage()    {}
func (*XappRegResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{6}
}
func (m *XappRegResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XappRegResp.Unmarshal(m, b)
}
func (m *XappRegResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XappRegResp.Marshal(b, m, deterministic)
}
func (dst *XappRegResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XappRegResp.Merge(dst, src)
}
func (m *XappRegResp) XXX_Size() int {
	return xxx_messageInfo_XappRegResp.Size(m)
}
func (m *XappRegResp) XXX_DiscardUnknown() {
	xxx_messageInfo_XappRegResp.DiscardUnknown(m)
}

var xxx_messageInfo_XappRegResp proto.InternalMessageInfo

func (m *XappRegResp) GetHeader() *RICMsgHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *XappRegResp) GetRicServices() map[string]*RICService {
	if m != nil {
		return m.RicServices
	}
	return nil
}

func (m *XappRegResp) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *XappRegResp) GetKafkaURL() string {
	if m != nil {
		return m.KafkaURL
	}
	return ""
}

func (m *XappRegResp) GetCause() string {
	if m != nil {
		return m.Cause
	}
	return ""
}

type RICService struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ServiceVer           int32    `protobuf:"varint,2,opt,name=ServiceVer,proto3" json:"ServiceVer,omitempty"`
	IpAddr               string   `protobuf:"bytes,3,opt,name=IpAddr,proto3" json:"IpAddr,omitempty"`
	Port                 string   `protobuf:"bytes,4,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RICService) Reset()         { *m = RICService{} }
func (m *RICService) String() string { return proto.CompactTextString(m) }
func (*RICService) ProtoMessage()    {}
func (*RICService) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{7}
}
func (m *RICService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICService.Unmarshal(m, b)
}
func (m *RICService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICService.Marshal(b, m, deterministic)
}
func (dst *RICService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICService.Merge(dst, src)
}
func (m *RICService) XXX_Size() int {
	return xxx_messageInfo_RICService.Size(m)
}
func (m *RICService) XXX_DiscardUnknown() {
	xxx_messageInfo_RICService.DiscardUnknown(m)
}

var xxx_messageInfo_RICService proto.InternalMessageInfo

func (m *RICService) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RICService) GetServiceVer() int32 {
	if m != nil {
		return m.ServiceVer
	}
	return 0
}

func (m *RICService) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *RICService) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type SMOInitMsg struct {
	Header               *RICMsgHeader     `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	InitConfig           map[string]string `protobuf:"bytes,2,rep,name=InitConfig,proto3" json:"InitConfig,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SMOInitMsg) Reset()         { *m = SMOInitMsg{} }
func (m *SMOInitMsg) String() string { return proto.CompactTextString(m) }
func (*SMOInitMsg) ProtoMessage()    {}
func (*SMOInitMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{8}
}
func (m *SMOInitMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMOInitMsg.Unmarshal(m, b)
}
func (m *SMOInitMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMOInitMsg.Marshal(b, m, deterministic)
}
func (dst *SMOInitMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMOInitMsg.Merge(dst, src)
}
func (m *SMOInitMsg) XXX_Size() int {
	return xxx_messageInfo_SMOInitMsg.Size(m)
}
func (m *SMOInitMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SMOInitMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SMOInitMsg proto.InternalMessageInfo

func (m *SMOInitMsg) GetHeader() *RICMsgHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SMOInitMsg) GetInitConfig() map[string]string {
	if m != nil {
		return m.InitConfig
	}
	return nil
}

type SMOEnableMsg struct {
	Header               *RICMsgHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SMOEnableMsg) Reset()         { *m = SMOEnableMsg{} }
func (m *SMOEnableMsg) String() string { return proto.CompactTextString(m) }
func (*SMOEnableMsg) ProtoMessage()    {}
func (*SMOEnableMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_msgx_b56aa3ef48bc5f8e, []int{9}
}
func (m *SMOEnableMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMOEnableMsg.Unmarshal(m, b)
}
func (m *SMOEnableMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMOEnableMsg.Marshal(b, m, deterministic)
}
func (dst *SMOEnableMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMOEnableMsg.Merge(dst, src)
}
func (m *SMOEnableMsg) XXX_Size() int {
	return xxx_messageInfo_SMOEnableMsg.Size(m)
}
func (m *SMOEnableMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SMOEnableMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SMOEnableMsg proto.InternalMessageInfo

func (m *SMOEnableMsg) GetHeader() *RICMsgHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*GrpcMsg)(nil), "msgx.GrpcMsg")
	proto.RegisterType((*GrpcReply)(nil), "msgx.GrpcReply")
	proto.RegisterType((*XAPPRequestID)(nil), "msgx.XAPPRequestID")
	proto.RegisterType((*RICMsgHeader)(nil), "msgx.RICMsgHeader")
	proto.RegisterType((*XappMsgHeader)(nil), "msgx.XappMsgHeader")
	proto.RegisterType((*XappRegMsg)(nil), "msgx.XappRegMsg")
	proto.RegisterType((*XappRegResp)(nil), "msgx.XappRegResp")
	proto.RegisterMapType((map[string]*RICService)(nil), "msgx.XappRegResp.RicServicesEntry")
	proto.RegisterType((*RICService)(nil), "msgx.RICService")
	proto.RegisterType((*SMOInitMsg)(nil), "msgx.SMOInitMsg")
	proto.RegisterMapType((map[string]string)(nil), "msgx.SMOInitMsg.InitConfigEntry")
	proto.RegisterType((*SMOEnableMsg)(nil), "msgx.SMOEnableMsg")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgServiceClient is the client API for MsgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgServiceClient interface {
	RpcHandleMsg(ctx context.Context, in *GrpcMsg, opts ...grpc.CallOption) (*GrpcReply, error)
}

type msgServiceClient struct {
	cc *grpc.ClientConn
}

func NewMsgServiceClient(cc *grpc.ClientConn) MsgServiceClient {
	return &msgServiceClient{cc}
}

func (c *msgServiceClient) RpcHandleMsg(ctx context.Context, in *GrpcMsg, opts ...grpc.CallOption) (*GrpcReply, error) {
	out := new(GrpcReply)
	err := c.cc.Invoke(ctx, "/msgx.MsgService/rpcHandleMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServiceServer is the server API for MsgService service.
type MsgServiceServer interface {
	RpcHandleMsg(context.Context, *GrpcMsg) (*GrpcReply, error)
}

func RegisterMsgServiceServer(s *grpc.Server, srv MsgServiceServer) {
	s.RegisterService(&_MsgService_serviceDesc, srv)
}

func _MsgService_RpcHandleMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).RpcHandleMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/msgx.MsgService/RpcHandleMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).RpcHandleMsg(ctx, req.(*GrpcMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _MsgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "msgx.MsgService",
	HandlerType: (*MsgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "rpcHandleMsg",
			Handler:    _MsgService_RpcHandleMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msgx.proto",
}

func init() { proto.RegisterFile("msgx.proto", fileDescriptor_msgx_b56aa3ef48bc5f8e) }

var fileDescriptor_msgx_b56aa3ef48bc5f8e = []byte{
	// 699 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x6e, 0xd3, 0x4a,
	0x10, 0x3e, 0x4e, 0x93, 0x34, 0x9e, 0x24, 0xa7, 0xd5, 0x9e, 0xea, 0xc8, 0xca, 0xc5, 0x51, 0x64,
	0x1d, 0x55, 0x11, 0x48, 0x11, 0x84, 0x1b, 0x28, 0x02, 0x51, 0x92, 0x42, 0x2d, 0x6a, 0x1a, 0x6d,
	0x0a, 0xaa, 0xb8, 0xdb, 0xda, 0x5b, 0xcb, 0xaa, 0x6b, 0x1b, 0xaf, 0x5d, 0x11, 0xf1, 0x16, 0xdc,
	0xf1, 0x28, 0x3c, 0x06, 0xcf, 0xc0, 0x8b, 0xa0, 0xd9, 0x5d, 0xff, 0x34, 0x70, 0x41, 0xef, 0xe6,
	0x9b, 0xd9, 0x99, 0xfd, 0xbe, 0x99, 0x59, 0x1b, 0xe0, 0x5a, 0x04, 0x9f, 0xa6, 0x69, 0x96, 0xe4,
	0x09, 0x69, 0xa3, 0x6d, 0xff, 0x30, 0x60, 0xfb, 0x75, 0x96, 0x7a, 0xae, 0x08, 0xc8, 0x1e, 0x74,
	0xdc, 0x7c, 0x9d, 0x72, 0xcb, 0x18, 0x1b, 0x93, 0x0e, 0x55, 0x80, 0x58, 0xb0, 0xbd, 0x64, 0xeb,
	0x28, 0x61, 0xbe, 0xd5, 0x1a, 0x1b, 0x93, 0x01, 0x2d, 0x21, 0xf9, 0x0f, 0x40, 0x9b, 0x27, 0x3c,
	0xb6, 0xb6, 0x64, 0x52, 0xc3, 0x43, 0xfe, 0x85, 0xee, 0x9c, 0x45, 0x51, 0xe8, 0x5b, 0x6d, 0x19,
	0xd3, 0x08, 0x2b, 0x9e, 0x85, 0xd7, 0x3c, 0x29, 0x72, 0xab, 0x23, 0x03, 0x25, 0xc4, 0x0c, 0x91,
	0xb3, 0xbc, 0x10, 0x56, 0x57, 0x65, 0x28, 0x44, 0x08, 0xb4, 0x5d, 0x1e, 0xfa, 0xd6, 0xf6, 0xd8,
	0x98, 0x98, 0x54, 0xda, 0xc8, 0x36, 0x4f, 0xd2, 0xd0, 0xb3, 0x7a, 0xd2, 0xa9, 0x00, 0x7a, 0x57,
	0xc5, 0x85, 0xe3, 0x5b, 0xa6, 0xd2, 0x20, 0x81, 0xfd, 0x10, 0x4c, 0x14, 0x49, 0x79, 0x1a, 0xad,
	0xb1, 0x98, 0x97, 0xf8, 0xa5, 0x4a, 0x69, 0x93, 0x5d, 0xd8, 0xe2, 0x59, 0x26, 0x05, 0x9a, 0x14,
	0x4d, 0xfb, 0x14, 0x86, 0xe7, 0x87, 0xcb, 0x25, 0xe5, 0x1f, 0x0b, 0x2e, 0x72, 0x67, 0x81, 0xdc,
	0xce, 0x59, 0x9a, 0x3a, 0x0b, 0x99, 0x38, 0xa4, 0x1a, 0x91, 0x7d, 0xf8, 0x5b, 0x5a, 0xb1, 0xc8,
	0x59, 0xec, 0x71, 0x67, 0x21, 0xab, 0x0c, 0xe9, 0x86, 0xd7, 0xfe, 0x0c, 0x03, 0xea, 0xcc, 0x5d,
	0x11, 0x1c, 0x73, 0xe6, 0xf3, 0x0c, 0xbb, 0xe0, 0x8a, 0xe0, 0xac, 0xee, 0x77, 0x09, 0xf1, 0x26,
	0x57, 0x04, 0xef, 0xb9, 0xe2, 0xd3, 0xa1, 0x1a, 0x91, 0x27, 0x30, 0xc4, 0x9a, 0x15, 0x25, 0xd9,
	0xf2, 0xfe, 0xec, 0x9f, 0xa9, 0x9c, 0xea, 0x2d, 0xb6, 0xf4, 0xf6, 0x49, 0xfb, 0x8b, 0xa1, 0x72,
	0xef, 0x7e, 0x7d, 0xab, 0xba, 0x7e, 0x0f, 0x3a, 0x67, 0xc9, 0x95, 0x9e, 0xb4, 0x49, 0x15, 0xf8,
	0x95, 0x54, 0xfb, 0x8f, 0x49, 0x7d, 0x37, 0x00, 0x94, 0x27, 0xc0, 0xf5, 0xbb, 0x0f, 0x5d, 0xc5,
	0x4d, 0x12, 0xaa, 0x4b, 0x34, 0x69, 0xd3, 0x6e, 0x4d, 0x1f, 0x03, 0x35, 0xcb, 0x12, 0x92, 0x11,
	0xf4, 0xd0, 0x7c, 0xcb, 0xae, 0xb9, 0x66, 0x5a, 0x61, 0xf2, 0xbf, 0x22, 0xfb, 0xaa, 0x88, 0xbd,
	0x3c, 0x4c, 0x62, 0x21, 0xc9, 0x9a, 0xf4, 0xb6, 0x13, 0xf7, 0x5a, 0xce, 0x2e, 0x65, 0xbe, 0x9f,
	0xc9, 0x15, 0x35, 0x69, 0xc3, 0x53, 0xde, 0xb0, 0x4c, 0xb2, 0x5c, 0xee, 0xa9, 0xbe, 0x01, 0xb1,
	0xfd, 0xb5, 0x05, 0x7d, 0xad, 0x89, 0x72, 0x91, 0x92, 0x7b, 0x1b, 0xa2, 0x88, 0x12, 0xd5, 0xdc,
	0x84, 0x4a, 0xd3, 0x02, 0xfa, 0x34, 0xf4, 0x56, 0x3c, 0xbb, 0x09, 0x3d, 0x2e, 0xac, 0xd6, 0x78,
	0x6b, 0xd2, 0x9f, 0xd9, 0x75, 0x17, 0x74, 0xcd, 0x69, 0xe3, 0xd0, 0x51, 0x9c, 0x67, 0x6b, 0xda,
	0x4c, 0x53, 0x63, 0xc2, 0x77, 0x51, 0x8d, 0x09, 0xdf, 0xc5, 0x08, 0x7a, 0x6f, 0xd8, 0xe5, 0x15,
	0x7b, 0x47, 0x4f, 0xb4, 0xe8, 0x0a, 0x63, 0xc6, 0x9c, 0x15, 0x82, 0x6b, 0xa9, 0x0a, 0x8c, 0x96,
	0xb0, 0xbb, 0x79, 0x11, 0x3e, 0x93, 0x2b, 0xbe, 0x96, 0x52, 0x4c, 0x8a, 0x26, 0xd9, 0x87, 0xce,
	0x0d, 0x8b, 0x0a, 0x2e, 0xa7, 0xd0, 0x9f, 0xed, 0x56, 0xf2, 0x74, 0x22, 0x55, 0xe1, 0x83, 0xd6,
	0x63, 0xc3, 0x8e, 0x00, 0xea, 0x00, 0x3e, 0x43, 0x39, 0x23, 0x55, 0x4c, 0xda, 0xd8, 0x79, 0x1d,
	0xae, 0xb7, 0xbf, 0xe1, 0xc1, 0xd5, 0x74, 0xd2, 0x43, 0x9c, 0x8a, 0x12, 0xa7, 0x11, 0xd6, 0x92,
	0xd3, 0x50, 0xca, 0xa4, 0x6d, 0x7f, 0x33, 0x00, 0x56, 0xee, 0xa9, 0x13, 0x87, 0x39, 0x6e, 0xd7,
	0x5d, 0x06, 0xf1, 0x02, 0x00, 0xd3, 0xe6, 0x49, 0x7c, 0x19, 0x06, 0x7a, 0x0e, 0x63, 0x75, 0xbe,
	0xae, 0x38, 0xad, 0x8f, 0xa8, 0x29, 0x34, 0x72, 0x46, 0xcf, 0x60, 0x67, 0x23, 0xfc, 0x9b, 0xde,
	0xed, 0x35, 0x7b, 0x67, 0x36, 0x3b, 0x75, 0x00, 0x83, 0x95, 0x7b, 0x7a, 0x14, 0xb3, 0x8b, 0x88,
	0xdf, 0x91, 0xfc, 0xec, 0x39, 0x80, 0x2b, 0x82, 0xb2, 0xcb, 0x0f, 0x60, 0x90, 0xa5, 0xde, 0x31,
	0x8b, 0x7d, 0x55, 0x69, 0xa8, 0x32, 0xf5, 0x27, 0x7f, 0xb4, 0x53, 0x43, 0xf9, 0x71, 0xb4, 0xff,
	0x7a, 0xd9, 0xfb, 0xd0, 0x9d, 0x3e, 0x45, 0xef, 0x45, 0x57, 0xfe, 0x28, 0x1e, 0xfd, 0x0c, 0x00,
	0x00, 0xff, 0xff, 0xed, 0x7d, 0x4b, 0xb5, 0x36, 0x06, 0x00, 0x00,
}
