/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "E2SM-TS-IEs"
 * 	found in "E2SM-TS_ASN1_freeze_ver_0222.asn"
 * 	`asn1c -S /root/nric/asn1c/skeletons/ -fcompound-names -fincludes-quoted -fno-include-deps -findirect-choice -gen-PER`
 */

#ifndef	_ReleaseCommand_H_
#define	_ReleaseCommand_H_


#include "asn_application.h"

/* Including external dependencies */
#include "NRCGI.h"
#include "UEID.h"
#include "NativeEnumerated.h"
#include "asn_SEQUENCE_OF.h"
#include "constr_SEQUENCE_OF.h"
#include "constr_SEQUENCE.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ReleaseCommand__t320 {
	ReleaseCommand__t320_min5	= 0,
	ReleaseCommand__t320_min10	= 1,
	ReleaseCommand__t320_min20	= 2,
	ReleaseCommand__t320_min30	= 3,
	ReleaseCommand__t320_min60	= 4,
	ReleaseCommand__t320_min120	= 5,
	ReleaseCommand__t320_min180	= 6,
	ReleaseCommand__t320_spare1	= 7
} e_ReleaseCommand__t320;

/* Forward declarations */
struct CellReselectionPriority;

/* ReleaseCommand */
typedef struct ReleaseCommand {
	NRCGI_t	 sourceCellId;
	UEID_t	 uEId;
	struct ReleaseCommand__cellReselectionPriority_List {
		A_SEQUENCE_OF(struct CellReselectionPriority) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} cellReselectionPriority_List;
	long	*t320;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ReleaseCommand_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_t320_6;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_ReleaseCommand;
extern asn_SEQUENCE_specifics_t asn_SPC_ReleaseCommand_specs_1;
extern asn_TYPE_member_t asn_MBR_ReleaseCommand_1[4];

#ifdef __cplusplus
}
#endif

#endif	/* _ReleaseCommand_H_ */
#include "asn_internal.h"
